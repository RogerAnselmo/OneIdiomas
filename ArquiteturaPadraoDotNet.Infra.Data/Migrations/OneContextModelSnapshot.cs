// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using One.Infra.Data.Context;

namespace One.Infra.Data.Migrations
{
    [DbContext(typeof(OneContext))]
    partial class OneContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("One.Domain.Entities.GEAluno", b =>
                {
                    b.Property<int>("CodigoALuno")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CodigoEndereco");

                    b.Property<int>("CodigoResponsavel");

                    b.Property<DateTime>("DataNascimento");

                    b.Property<string>("NomeCompleto")
                        .HasMaxLength(200);

                    b.Property<string>("Sexo")
                        .HasMaxLength(1);

                    b.Property<string>("flAtivo")
                        .HasMaxLength(1);

                    b.HasKey("CodigoALuno");

                    b.HasIndex("CodigoEndereco");

                    b.HasIndex("CodigoResponsavel");

                    b.ToTable("GEAluno");
                });

            modelBuilder.Entity("One.Domain.Entities.GEBairro", b =>
                {
                    b.Property<int>("CodigoBairro")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CodigoCidade");

                    b.Property<string>("descricao")
                        .HasMaxLength(100);

                    b.HasKey("CodigoBairro");

                    b.HasIndex("CodigoCidade");

                    b.ToTable("GEBairro");
                });

            modelBuilder.Entity("One.Domain.Entities.GECidade", b =>
                {
                    b.Property<int>("CodigoCidade")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CodigoUF");

                    b.Property<string>("Descricao")
                        .HasMaxLength(100);

                    b.Property<string>("flAtivo")
                        .HasMaxLength(1);

                    b.HasKey("CodigoCidade");

                    b.HasIndex("CodigoUF");

                    b.ToTable("GECidade");
                });

            modelBuilder.Entity("One.Domain.Entities.GEEndereco", b =>
                {
                    b.Property<int>("CodigoEndereco")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CodigoBairro");

                    b.Property<string>("Logradouro")
                        .HasMaxLength(300);

                    b.Property<int>("Numero");

                    b.HasKey("CodigoEndereco");

                    b.HasIndex("CodigoBairro");

                    b.ToTable("GEEndereco");
                });

            modelBuilder.Entity("One.Domain.Entities.GEResponsavel", b =>
                {
                    b.Property<int>("CodigoResponsavel")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CPF")
                        .HasMaxLength(11);

                    b.Property<int>("CodigoEndereco");

                    b.Property<string>("NomeCompleto")
                        .HasMaxLength(300);

                    b.Property<string>("flAtivo")
                        .HasMaxLength(1);

                    b.HasKey("CodigoResponsavel");

                    b.HasIndex("CodigoEndereco");

                    b.ToTable("GEResponsavel");
                });

            modelBuilder.Entity("One.Domain.Entities.GETelefone", b =>
                {
                    b.Property<int>("CodigoTelefone")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CodigoTipoTelefone");

                    b.Property<string>("NumeroTelefone")
                        .HasMaxLength(20);

                    b.HasKey("CodigoTelefone");

                    b.HasIndex("CodigoTipoTelefone");

                    b.ToTable("GETelefone");
                });

            modelBuilder.Entity("One.Domain.Entities.GETipoTelefone", b =>
                {
                    b.Property<int>("CodigoTipoTelefone")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descricao")
                        .HasMaxLength(30);

                    b.Property<string>("flAtivo")
                        .HasMaxLength(1);

                    b.HasKey("CodigoTipoTelefone");

                    b.ToTable("GETipoTelefone");
                });

            modelBuilder.Entity("One.Domain.Entities.GEUF", b =>
                {
                    b.Property<int>("CodigoUF")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descricao");

                    b.Property<string>("Sigla");

                    b.Property<bool>("flAtivo");

                    b.HasKey("CodigoUF");

                    b.ToTable("GEUF");
                });

            modelBuilder.Entity("One.Domain.Entities.GEAluno", b =>
                {
                    b.HasOne("One.Domain.Entities.GEEndereco", "Endereco")
                        .WithMany()
                        .HasForeignKey("CodigoEndereco")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("One.Domain.Entities.GEResponsavel", "Responsavel")
                        .WithMany()
                        .HasForeignKey("CodigoResponsavel")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("One.Domain.Entities.GEBairro", b =>
                {
                    b.HasOne("One.Domain.Entities.GECidade", "Cidade")
                        .WithMany()
                        .HasForeignKey("CodigoCidade")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("One.Domain.Entities.GECidade", b =>
                {
                    b.HasOne("One.Domain.Entities.GEUF", "UF")
                        .WithMany("Cidades")
                        .HasForeignKey("CodigoUF")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("One.Domain.Entities.GEEndereco", b =>
                {
                    b.HasOne("One.Domain.Entities.GEBairro", "Bairro")
                        .WithMany()
                        .HasForeignKey("CodigoBairro")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("One.Domain.Entities.GEResponsavel", b =>
                {
                    b.HasOne("One.Domain.Entities.GEEndereco", "Endereco")
                        .WithMany()
                        .HasForeignKey("CodigoEndereco")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("One.Domain.Entities.GETelefone", b =>
                {
                    b.HasOne("One.Domain.Entities.GETipoTelefone", "TipoTelefone")
                        .WithMany()
                        .HasForeignKey("CodigoTipoTelefone")
                        .OnDelete(DeleteBehavior.Restrict);
                });
#pragma warning restore 612, 618
        }
    }
}
